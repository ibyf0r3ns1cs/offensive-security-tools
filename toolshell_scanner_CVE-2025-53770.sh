#!/bin/bash
###############################################################################
# ToolShell (CVE-2025-53770 / 53771) Implant Scanner
#
# Description :
#   • Confirms whether a target host is running SharePoint (header + HTML checks)
#   • If SharePoint is present, probes the well-known malicious endpoint
#       “/_layouts/15/spinstall0.aspx” used by the ToolShell exploit chain
#   • Flags an implant when the endpoint:
#         – Responds 200 OK, and
#         – Returns a short (~160 B) body that matches the leaked crypto
#           key pattern: 64-hex | HMACSHA256 | 64-hex | Auto | Framework20SP1
#
# Why :
#   Attackers drop spinstall0.aspx to dump MachineKey secrets.  Possessing
#   these keys lets them sign arbitrary __VIEWSTATE payloads → unauth RCE.
#
# Usage      :  ./toolshell_scanner.sh          # (scans default HOST below)
#             :  HOST=foo.gov.il ./toolshell_scanner.sh   # override via env
#
# Requirements:
#   • curl  • grep  • awk  • sed  • tr  • wc
#
# Exit Codes :
#   0 – Finished, no fatal errors (implant may or may not be found)
#   1 – Required binary missing
#
# Author     : ibyf0r3ns1cs (adapted by ChatGPT) – 2025-07-21
###############################################################################
                                                                                                                                                                                                                                                                                                                                                                                                                                  
# === Configuration ===                                                                                                                                                                                                   
HOST="${1:-example.com}"                                                                                                                                                                                                   
TARGET="https://${HOST}"                                                                                                                                                                                                  
IMPLANT_URL="${TARGET}/_layouts/15/spinstall0.aspx"                                                                                                                                                                       
                                                                                                                                                                                                                          
echo "[+] Scanning $HOST for ToolShell Indicators..."                                                                                                                                                                     
                                                                                                                                                                                                                          
# === Step 1: Try SharePoint version header ===                                                                                                                                                                           
VERSION=$(curl -s -I -X OPTIONS --connect-timeout 5 "$TARGET" \                                                                                                                                                           
  | grep -i "^MicrosoftSharePointTeamServices:" \                                                                                                                                                                         
  | awk '{print $2}' | tr -d '\r')                                                                                                                                                                                        
                                                                                                                                                                                                                          
if [ -n "$VERSION" ]; then                                                                                                                                                                                                
  echo "[_] SharePoint detected via HTTP header (version: $VERSION)"                                                                                                                                                      
  IS_SHAREPOINT="true"                                                                                                                                                                                                    
else                                                                                                                                                                                                                      
  # === Step 2: Fallback to HTML fingerprint with redirect support ===                                                                                                                                                    
  FINGERPRINT_PATTERN="Microsoft SharePoint|sp.js|MSOWebPartPage|_layouts/15"                                                                                       
                                                                                                                                                                                                                          
  HTML_SIG=$(curl -Ls --connect-timeout 5 "$TARGET" \                                                                                                                                                                     
    | grep -Eoi "$FINGERPRINT_PATTERN" | head -n 1)                                                                                                                                                                       
                                                                                                                                                                                                                          
  if [ -n "$HTML_SIG" ]; then         
    echo "[_] SharePoint detected via HTML fingerprint (matched: $HTML_SIG)"
    IS_SHAREPOINT="true"                                                                                                                                                                                                  
  else                                                                                                                      
    echo "[_] SharePoint not detected. Skipping ToolShell implant scan."                                                    
    IS_SHAREPOINT="false"                          
  fi                                                                    
fi                               
                                                                                                             
# === Step 3: If SharePoint detected, scan for ToolShell implant ===                                                                             
if [ "$IS_SHAREPOINT" = "true" ]; then                                                                                      
  echo "[*] Probing suspected implant URL: $IMPLANT_URL"                
  RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" --connect-timeout 5 "$IMPLANT_URL")                                                            
  BODY=$(echo "$RESPONSE" | sed -e 's/HTTPSTATUS\:.*//g')                                                                                        
  STATUS=$(echo "$RESPONSE" | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')                                                      
  SIZE=$(echo -n "$BODY" | wc -c)                                                                                           
                                                                                                             
  echo "[*] HTTP Status: $STATUS"     
  echo "[*] Body Size  : $SIZE bytes"                                                                        
                                                              
  if [ "$STATUS" = "200" ] && [ "$SIZE" -le 165 ]; then                                                                                          
    echo "[!] Suspicious short response detected (_165 bytes):"                                                             
    echo "$BODY"                                              
                                                              
    # === Step 4: Match known ToolShell response pattern ===                                                                                     
    if echo "$BODY" | grep -Eq '^[A-Z0-9]{64}\|HMACSHA256\|[A-Z0-9]{64}\|[A-Za-z]+\|Framework.*'; then                                           
      echo "[__] ToolShell implant confirmed! Key material leak pattern matched."                                                                
    else                                                                
      echo "[_] Response body is short but pattern did NOT match ToolShell implant."                                                             
    fi                                                                  
  else                                                                  
    echo "[+] No suspicious implant response detected at $IMPLANT_URL."                                                                          
  fi                                                                    
fi 
fi
